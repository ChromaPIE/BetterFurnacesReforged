import com.sun.org.apache.xalan.internal.xsltc.compiler.Closure
import net.minecraftforge.gradle.userdev.tasks.RenameJarInPlace

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

version = "${minecraft_version}-${mod_version}"
group = 'wily.betterfurnaces'
archivesBaseName = 'BetterFurnacesReforged'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

def sourceSet = sourceSets.create("ultimatefurnaces")
sourceSet.compileClasspath += sourceSets.main.output
sourceSet.runtimeClasspath += sourceSets.main.output
def ultimatefurnacesImplementation = project.configurations.maybeCreate(sourceSet.getTaskName(null, "implementation"))
def ultimatefurnacesCompileOnly = project.configurations.maybeCreate(sourceSet.getTaskName(null, "compileOnly"))
def ultimatefurnacesRuntimeOnly = project.configurations.maybeCreate(sourceSet.getTaskName(null, "runtimeOnly"))
// If this is a secondary module then make the base tasks extend the builtin ones
ultimatefurnacesImplementation.extendsFrom(project.configurations.getByName("implementation"))
ultimatefurnacesCompileOnly.extendsFrom(project.configurations.getByName("compileOnly"))
ultimatefurnacesRuntimeOnly.extendsFrom(project.configurations.getByName("runtimeOnly"))
project.sourceSets.test.compileClasspath += sourceSet.output
project.sourceSets.test.runtimeClasspath += sourceSet.output




minecraft {
    mappings channel: "${mappings_channel}", version: "${minecraft_version}"


    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                betterfurnaces {
                    source sourceSets.main
                }
                ultimatefurnaces {
                    source sourceSets.ultimatefurnaces
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                betterfurnaces {
                    source sourceSets.main
                }
                ultimatefurnaces {
                    source sourceSets.ultimatefurnaces
                }
            }
        }
    }
}
jar {
    manifest {
        attributes([
                "Specification-Title"     : "betterfurnaces",
                "Specification-Vendor"    : "wily",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "wily"
        ])
    }
}
task ultimatefurnacesJar(type: Jar) {
    baseName = "UltimateFurnaces"
    version = "${minecraft_version}-${ufmod_version}"
    manifest {
        attributes([
                "Specification-Title"     : "ultimatefurnaces",
                "Specification-Vendor"    : "wily",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${ufmod_version}",
                "Implementation-Vendor"   : "wily"
        ])
    }
    from sourceSets.ultimatefurnaces.output

}

createReobf(sourceSets.ultimatefurnaces)

def createReobf(SourceSet sourceSet) {
    def reobfTask = createReobf(sourceSet.getJarTaskName())
    reobfTask.configure { classpath.from(sourceSet.compileClasspath) }
    tasks.named(sourceSet.getJarTaskName()).configure(task -> task.finalizedBy(reobfTask))
    return reobfTask
}
def createReobf(String name) {
    def reobfExtension = (NamedDomainObjectContainer<RenameJarInPlace>) extensions.getByName("reobf")
    return reobfExtension.register(name)
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")
    compileOnly fg.deobf("curse.maven:project-mmo-${pmmo_version}")
    runtimeOnly fg.deobf("curse.maven:project-mmo-${pmmo_version}")


}
repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url "https://maven.shedaniel.me/"
    }
}


